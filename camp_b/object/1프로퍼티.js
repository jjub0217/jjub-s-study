// 우리가 어떠한 값을 선언하게 될때, 하나의 이름에
// 여러종류의 값을 넣을수 있게 해준다

// const dogName = '멍멍이';
// const dogAge = 2;

// console.log(dogName);
// console.log(dogAge);

// 위 코드를 아래에 객체로 만들어보자

const dog = {
    // 이름('프로퍼티 키') : 값('프로퍼티 값')  <- 프로퍼티
    // 키 에는 빈 문자열을 포함한 모든 문자열과, 숫자가 올수 있다. 
    
    // 프로퍼티 값에는 JS에서 사용할수 있는 모든 값이 올수 있다.

    name: '멍멍이',
    age: 2,
    cute: true,
    sample : {
        a: 1,
        b: 2
    },

    // 프로퍼티 키 에 올수 있는 문자열은 공백이 있거나, 기호가 있으면 안된다.
    'key with space': 'asdf', // 공백을 만들려면 '' 으로 감싸줘야 한다. : 식별자 네이밍 규칙을 지키지 않은 경우
    'last-name' : '멍뭉이', // 문자열 내부에 기호를 넣으려면 '' 으로 감싸줘야 한다 : 식별자 네이밍 규칙을 지키지 않은 경우
    10 : 3                 // 숫자가 오는 경우에는 숫자를 사용했지만, 내부적으로는 문자열로 변환된다.
}


console.log(dog);   // <- 객체에 대한 정보를 알수 있다. 
// { name: '멍멍이', age: 2, cute: true, sample: { a: 1, b: 2 } }

// <객체 밖에서, 객체 내부의 프로퍼티 키에 접근하는 방법>
//  1. 마침표 표기법
//  2. 대괄호 표기법
//      - 프로퍼티 키는 반드시 '' 로 감싼 문자열을 대괄호로 감싸야 한다.
//      - 식별자 네이밍 규칙을 지키지 않은 경우에 사용해야 한다.
//      - 프로퍼티 키가 숫자일 경우에 '' 을 생략할수 있다.(생략 안해도 된다. 왜냐면, 위에서 말했듯이 이미 js 엔진이 
//                                                        내부적으로 문자열로 변환하기 때문이다)

console.log(dog.name);  // 멍멍이 : 마침표 표기법
console.log(dog.age);   // 2    : 마침표 표기법

console.log(dog.cute);      // true : 마침표 표기법
console.log(dog['cute']);   // true : 대괄호 표기법

console.log(dog['key with space']); // asdf : 대괄호 표기법
console.log(dog['last-name']);      // 멍뭉이 : 대괄호 표기법

console.log(dog[10]);   // 3 : 대괄호 표기법
console.log(dog['10']); // 3 : 대괄호 표기법



