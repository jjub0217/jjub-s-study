//   <함수 표현식> : 함수는 객체다
//   1. 익명함수와 즉시 실행함수
//      a. 익명함수
//          - 하나의 표현식이기 때문에 변수에 할당 가능
//          - 또 다른 함수의 매개변수로도 사용할수 있다. 
//      b. 즉시 실행함수 
//          - 변수에 할당할수 있고, 반환값을 변수에 할당할수 있다.
//          - 함수를 정의함과 동시에 실행 하는 함수
//          - 함수 선언 소스 전체를 소괄호로 묶어야 한다.
//          - 소스 전체를 묶는 소괄호 뒤에 인수를 넣는 소괄호를 붙힌다.
//      c. 화살표 함수
//          - 익명함수를 쓸때 대체함수로 많이 쓰인다.
//          - 매개변수가 하나라면 괄호없이 해당 매개변수 하나만 작성한다.

let add = function (a, b) {
    let sum = a + b;
    return sum;
}
console.log(add(10, 20));

// ↑ 위 코드는 아래코드와 동일한 코드이다. 
// (함수의 결과값을 변수에 할당했느냐, 안했느냐의 차이.)

let add = function (a, b) {
    return a + b;
}
let sum = add(10, 20);
console.log(sum);


// ↓ 아래 코드는 위의 두 코드와 동일한 코드이다.
// (아래 코드는 즉시실행 함수이고, 위 코드들은 즉시 실행함수가 아니다는 차이)
let add = (function() {
    return 10 + 20;
})();
console.log(add);


// ↓ 아래 코드는 바로 위 코드와 동일한 코드이다. 
// 인수를 파라미터에 전달해줬느냐, 전달하지 않았느냐의 차이.
let add = (function(a, b){
    return a + b;
})(10, 20);
console.log(add);