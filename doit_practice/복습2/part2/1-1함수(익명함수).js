/* <함수 표현식> : 함수 표현식으로 정의한 함수는 함수 표현식 이전에 호출 할 수 있다. 
    1. 익명함수
        - 하나의 표현식이기 때문에 변수에 할당 할 수 있다.
                ￣￣￣￣표현식 : "10 + 20" ("연산자 표현식")
                        ￣￣￣￣평가(식을 해석해서 값을 생성) ─>  값을 생섬 / 기존 값을 참조    ─> 변수에 할당
                                                                ￣￣￣￣￣￣￣￣￣￣￣￣￣￣     ￣￣￣ 
        "표현식 = 리터럴"                                          "값" :                         변수 : 값으로 평가되므로 "식별자 표현식"이다.
                                                                1. 데이터 타입을 갖고있다.
                                                                2. 메모리에 2진수의 나열로 저장된다.
                        리터럴 : 1. 원시타입( immutable: 변경 불가능 )
                                    - number
                                        - 정수 
                                        - 부동소수점
                                        - 2진수 
                                        - 8진수
                                        - 16진수 
                                    - string
                                    - boolean
                                    - null
                                    - undefined
                                2. 객체타입 ( mutable : 변경 가능 )
                                    - 배열
                                    - 정규표현식
                                    - 함수 
        - 또 다른 매개변수로도 사용할 수 있다. */

let add = function(a, b){
    return a + b ;
}
// console.log(add(20, 25));  // 45
let sum = add(20, 25);
console.log(sum);  // 45


   