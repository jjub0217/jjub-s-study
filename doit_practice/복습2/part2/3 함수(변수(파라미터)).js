function addNumber(a, b){  // <- addNumber 라는 이름의 이 함수에서 매개변수는 a 와 b 이다. 
    let sum = a + b;       // 여기서 말하는 "매개변수"란? 
    console.log(sum);      //   - 함수를 실행하기 위해 필요하다고 지정하는 값.
}                          // 즉, 함수를 실행할때 "필요하니까" "미리" "지정"하는 값이다.
addNumber(1, 20);


let num1 = +prompt('첫번째 숫자는?');
let num2 = +prompt('두번째 숫자는?');

function add(a, b) {
    let result = a + b;
    // return result;
    alert(`두 수를 더한 값은 ${result}입니다.`);
}
// console.log(add(num1, num2));
add(num1, num2);    // 포이에마에 나오듯이, 원래 이 js파일에서 말하는 "add" 라는 것은 
                    // 함수 몸체 내부에서만 유효한 식별자인 함수 이름이다. 
                    // 그래서 원래는 add 라는 이름으로 함수를 호출할수 없어야 하는건데 
                    // 이 js파일을 보면, 봐라. 지금 호출되고 있지 않은가?
                    // 왜일까?
                    // 결론부터 말하자면 "add"는 js 엔진이 암묵적으로 생성한 식별자이다. 
                    //      -> 그니까, 함수 이름은 함수 몸체에서만 유효한 식별자라서 
                    //         "add" 와 별도로, 생성된 함수의 객체를 가리키는 식별자가 필요하다.
                    //          왜냐면, 함수 객체를 가리키는 식별자가 없으면 이 js파일에 있는 함수를
                    //          호출할수 도 없고 참조할수도 없다. 
                    //          그래서, 생성된 함수를 호출하기 위해서 "add" 라는 함수 이름과 똑같은
                    //          이름의 식별자를 js 엔진이 암묵적으로 생성하고, 
                    //          그 식별자에 함수 객체를 할당한것이다.

                    // 그러므로, 함수는
                    // 함수 이름으로 호출하는 것이 아니라, 함수 객체를 가리키는 식별자로 호출하는 것이다.
                    // 함수 이름과, 함수 객체를 가리키는 식별자로 호출하려고 별도로 식별자를 등록하려면 
                    // 아래 코드처럼 하면 된다. 


let num1 = +prompt('첫번째 숫자는?');
let num2 = +prompt('두번째 숫자는?');

let add = function add(a, b){
   let result = a + b;
   alert(`두 수를 더한 값은 ${result}입니다.`);
}
add(num1, num2);
