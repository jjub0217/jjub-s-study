/* 객체를 생성하는 방법
                1. 객체 리터럴
        ┌-----> 2. 생성자 함수
        │       3. Object 생성자함수
        │       4. Object.creat 메서드
        │       5. 클래스
        │                                */
/* 생성자 함수
        - ** 객체를 만들어내는 함수이다.** 
        - 객체 리터럴를 사용해서 객체를 생성하는것은 정해진 값을 만들어내는 객체를 한번만 만들고 끝내는 것이다. 
            - 객체 리터럴을 사용해서 객체를 생성하는 것은
              하나의 붕어빵 틀을 1개 조립하고 붙히고 만들어서 붕어빵 하나 만들고 끝내고,  
              또 다른 붕어빵 틀을 또 만드어서 새로운 붕어빵 두개째 만들고 끝내고를 반복하는 것과 똑같다.   
              -> 그럴바에야 여러개의 붕어빵을 만들수 있는 붕어빵 틀을 한개 만들고 여러번 쓰는 것이 좋지 않은가?
                    -> 틀을 미리 만들고, 필요할때마다 붕어빵을 만들어서 정보를 담는것이 편하다
                    ( = 틀을 미리 만들고, 필요할때마다 그 틀을 복제한 인스턴스를 만들어 객체의 정보를 담는것이 편하다)
    ----------> 이때 생성자 함수를 사용한다. 
        - 생성자 함수 : 객체를 만들어내는 함수
        - ** function 랑 this 를 사용해야 한다.**
        - ** this 를 사용하는 경우 : 
            생성자 함수 안에 객체의 프로퍼티 와 메서드를 정의할때 사용한다.**
        - ** " function Book(){  ...  } "  <- 이걸을 constructor(객체 생성자) 라고 한다.**
*/

// 생성자 함수를 사용해서 book 이란 객체를 만들어내라
function Book(title, author, page, price){
    this.title = title, // Book 의 title 은 인수로 받아와서 전달되는 매개변수이다. 
    this.author = author, // Book 의 title 은 인수로 받아와서 전달되는 매개변수이다. 
    this.page = page, // Book 의 title 은 인수로 받아와서 전달되는 매개변수이다. 
    this.price = price // Book 의 title 은 인수로 받아와서 전달되는 매개변수이다. 
}
// <- Book 이란 생성자 함수

const jsbook = new Book('자바스크립트','홍길동', 500, '15,000');
// <- Book : 프로토타입 객체
// <- jsbook : 인스턴스 이며 변수이며 객체 
console.log(jsbook); 
/* Book 
{ title: '자바스크립트', 
author: '홍길동', 
page: 500, 
price: '15,000' 
}
*/
console.log(typeof jsbook) // object