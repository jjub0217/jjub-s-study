// << State  >>
/* 
- 기존에 그려졌던 props 나 state 의 변경이 발생하면, 랜더를 다시 할수 있다. (랜더함수가 다시 호출된다.)
- Hooks 
   - class 컴포넌트 아니어도(functional 컴포넌트에서) 
     state 와 다른 React의 기능들을 사용할수 있게 해준다. 
   - functional 컴포넌트에는 state가 없기 때문에, 
     Hooks를 사용하지 않으면, state 를 함수 컴포넌트 내부에서 사용할수 없게 된다.
     하지만, Hooks를 사용하면 함수 컴포넌트 내부에서도 state를 사용할수 있게 된다.

< State >
   - 컴포넌트 내부에서 변경할 수 있는 데이터 (예시: a: 1 -> a: 2) 
   - Class 컴포넌트 내부의 State를 사용하는 방법(Class 컴포넌트 안에는 State가 있으니까)
      - State 초기값 설정
         1. state = {};
         2. constructor
      - Class 컴포넌트 내부에서 초기설정한 State 사용
         - this.state.프로퍼티키 로 접근





*/
















// 19분 일때 : 46
// 23분 일때 : 42
// 28분 일때 : 37
// 41분 일때 : 24
// 46분 일때 : 19
// 1시간 15분 ~ 2시간 5분  
// 2시간 15분 ~ 3시간 7분 

// 20분 2시간 
// 13시간???????????????????????????????????

// 12시 ~ 7시간 9일 수요일 수업꺼 -> 22 화요일 3일치를 2주일 걸려서...

// 12시 ~ 6시간 11일 금요일 수업꺼 -> 23 수요일 
// 12시 ~ 7시간 14일 월요일 수업꺼 -> 24 목요일
// 12시 ~ 7시간 15일 화요일 수업꺼 -> 25 금요일   // 1월 5일
// 12시 ~ 6시간 16일 수요일 수업꺼 -> 26 토요일   
// 12시 ~ 6시간 18일 금요일 수업꺼 -> 27 일요일
// 12시 ~ 6시간 21일 금요일 수업꺼 -> 28 월요일 // 1월 19일 
// 12시 ~ 6시간 18일 금요일 수업꺼 -> 27 일요일
// 12시 ~ 6시간 18일 금요일 수업꺼 -> 27 일요일
// 12시 ~ 6시간 18일 금요일 수업꺼 -> 27 일요일
